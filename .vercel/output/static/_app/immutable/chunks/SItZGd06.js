import{S as w,i as F,s as P,n as g,d as l,b as i,e as s,v as a,h as _,j as o,k as C}from"./BJ9OYGg-.js";import"./IHki7fMi.js";function z(q){let n,b="💻",y,u,d='<li>用 Python 写了一个企业微信的机器人。作用是每周团队里需求冻结的那天下午，抓取一遍 Gitlab 里需要当天合入的 merge request，然后发到企业微信群里提醒一下大家记得合并。</li> <li>上面的这个脚本出了一点小问题，因为很难准确地从 Gitlab 的信息里知道<strong>这周发的是什么版本</strong>这个信息。尝试了一些途径都碰壁，最后决定自己来维护发版的信息，用 flask-restful 写了一个内网可以访问的小接口。数据源放在了 Google Sheet 上面，再用一个 2013 年的代码片段<a href="http://blog.pamelafox.org/2013/06/exporting-google-spreadsheet-as-json.html" rel="nofollow">^1</a>把 Google Sheet 上的数据转成 json。</li>',L,r,G='<img src="https://i.typlog.com/yifen/8414078262_960514.png" alt="image.png"/>',h,p,j="<li>这个服务本来部署在了办公室里的一台小机器上；后来跟同事介绍了一下，同事也很感兴趣，让我部署在了内部的一台服务器上，他有个手上的任务也可以接入我的接口。看来还是有人有类似的需求的。</li> <li>接到了新的任务，要开始用新的工具写新的东西。分配给我的任务到今天基本打通了，明天有时间研究一下怎么写 RFC 给其他同事看我的思路。</li> <li>昨天写了一个脚本，把本来各端约定好的颜色和色组文件做了一下解析，变成了新项目里可以直接进行使用的格式。颜色在原来的仓库里是 yaml 文件存放的，随便 Google 了一个 online yaml to json converter 转成了 json，再用 python 的脚本读取后拼接成了 Dart 字符串，写入到文件中。过程非常简单，但避免了手动处理几百个颜色，还挺好的。写了一个相关的 wiki 以及新增了两个仓库，打算后面让相关的同事配上 CI，每次有新增的颜色的时候就自动执行这个过程，来更新仓库里的色组。</li>",H,f,R="📚",c,m,k="<li>过了一遍 React 文档里的教程</li> <li>过了一遍 Gatsby 文档里的教程</li> <li>买了 wesbos 的 React for beginner 的课，看到了第 20 章；</li> <li>感觉现在自己大概理解了 React 里的一些基本概念了：component、state 和 props。但感觉 React 的 router 有点繁琐；Gatsby 的文档好详细，对我这样的小白很友好</li> <li>过了一遍 Flutter 的文档</li>",M,v,S="🍳",T,x,U="<li>买了一份盐焗鸡，从广东寄过来了；明天打算拆一下，鸡肉蒸热，鸡架煲汤</li>";return{c(){n=o("h2"),n.textContent=b,y=C(),u=o("ul"),u.innerHTML=d,L=C(),r=o("p"),r.innerHTML=G,h=C(),p=o("ul"),p.innerHTML=j,H=C(),f=o("h2"),f.textContent=R,c=C(),m=o("ul"),m.innerHTML=k,M=C(),v=o("h2"),v.textContent=S,T=C(),x=o("ul"),x.innerHTML=U},l(t){n=s(t,"H2",{"data-svelte-h":!0}),a(n)!=="svelte-io1z9a"&&(n.textContent=b),y=_(t),u=s(t,"UL",{"data-svelte-h":!0}),a(u)!=="svelte-lycm8y"&&(u.innerHTML=d),L=_(t),r=s(t,"P",{"data-svelte-h":!0}),a(r)!=="svelte-1djmyue"&&(r.innerHTML=G),h=_(t),p=s(t,"UL",{"data-svelte-h":!0}),a(p)!=="svelte-18i7t94"&&(p.innerHTML=j),H=_(t),f=s(t,"H2",{"data-svelte-h":!0}),a(f)!=="svelte-9fkrst"&&(f.textContent=R),c=_(t),m=s(t,"UL",{"data-svelte-h":!0}),a(m)!=="svelte-14gyelr"&&(m.innerHTML=k),M=_(t),v=s(t,"H2",{"data-svelte-h":!0}),a(v)!=="svelte-1iovqpn"&&(v.textContent=S),T=_(t),x=s(t,"UL",{"data-svelte-h":!0}),a(x)!=="svelte-g5ydye"&&(x.innerHTML=U)},m(t,e){i(t,n,e),i(t,y,e),i(t,u,e),i(t,L,e),i(t,r,e),i(t,h,e),i(t,p,e),i(t,H,e),i(t,f,e),i(t,c,e),i(t,m,e),i(t,M,e),i(t,v,e),i(t,T,e),i(t,x,e)},p:g,i:g,o:g,d(t){t&&(l(n),l(y),l(u),l(L),l(r),l(h),l(p),l(H),l(f),l(c),l(m),l(M),l(v),l(T),l(x))}}}const D={title:"2020-03",date:"2020-04-01",excerpt:"三月份做的一些事",tags:""},{title:B,date:E,excerpt:J,tags:K}=D;class N extends w{constructor(n){super(),F(this,n,null,z,P,{})}}export{N as default,D as metadata};
